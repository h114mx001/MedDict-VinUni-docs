openapi: '3.0.2'
info:
  description: |-
    API for MedDict-VinUni Backend.
  license: 
    name: MIT License
    url: https://opensource.org/licenses/MIT
  title: MedDict-VinUni Backend API
  version: '1.1'
servers:
  - url: http://localhost:5000
    description: Local development API
  - url: https://api.meddict-vinuni.com
    description: Production API
tags:
  - name: words
    description: API related to the words in the dictionary.
  - name: pages
    description: API related to the pages for convenience in managing the dictionary.
  - name: user
    description: API related to user management. 
  - name: auth 
    description: API related to authentication and authorization.

paths:
  /words:
    get:
      operationId: RetrieveWords
      summary: Retrieve words from MedDict Database from pattern
      description: |-
        Get results of word from input, which included the definitions, illustration, etc. The pattern follows the following Regular Expression
        ```Python
        import re 
        pattern = f"^.*{pattern}.*$"
        ```
        Which means it will match any word that **INCLUDES** the pattern.
      tags: 
        - words
      parameters:
        - name: lang
          in: query
          description: Source language to search the pattern on.
          required: true
          explode: true
          schema:
            type: string
            enum:
              - en
              - vn
        - name: word
          in: query
          description: The pattern to search for.
          required: true
          explode: true
          schema:
            type: string
          example: 'abdominal'  
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                $ref: "#/components/schemas/words"
        '400':
          description: The request is not following the convention.
    post:
      operationId: CreateWord
      summary: Create a new word in the database.
      security:
        - APIKeyCookie: []
      description: |-
        Create a new word in the database manually. 
      tags: 
        - words
      requestBody:
        description: The word to be created, based on the following example
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                en:
                  type: string
                en_type:
                  type: string
                vn:
                  type: string
                vn_type:
                  type: string
              example:
                en: Software Construction
                en_type: n
                vn: Xây dựng phần mềm
                vn_type: danh từ
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                example:
                  id: 1337
        '400':
          description: The request is not following the convention.
        '403':
          description: The user is not authorized to create a new word (aka. not admin).
        '500':
          description: The word is already in the database.
    put:
      operationId: UpdateWord
      summary: Update a word in the database.
      security:
        - APIKeyCookie: []
      description: |-
        Update a word in the database manually. 
      tags: 
        - words
      requestBody:
        description: |-
          The description of the word to be updated. Except the id, all other fields are optional. 
          
          If the field is provided, it will be **overwritten** with the data in the dictionary. However, if the field is not provided, the old data will **not be changed**. 
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                en:
                  type: string
                en_type:
                  type: string
                vn:
                  type: string
                vn_type:
                  type: string
              example:
                id: 1337
                en: Software Construction
                en_type: n
                vn: Xây dựng phần mềm
                vn_type: danh từ
      responses:
        '200':
          description: OK
        '400':
          description: The request is not following the convention.
        '403':
          description: The user is not authorized to update a word (aka. not admin).
        '404':
          description: The word id's is not found.
        '500':
          description: Unknown error.
    delete:
      operationId: DeleteWord
      summary: Delete (a) word(s) in the database.
      security:
        - APIKeyCookie: []
      description: |-
        Delete (a) word(s) in the database manually.
      tags: 
        - words
      requestBody:
        description: The id of the word(s) to be deleted. The array can be either empty, or contain multiple ids.
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
              example:
                - 1337
                - 1338
                - 1339
      responses:
        '200':
          description: OK
        '400':
          description: The request is not following the convention.
        '403':
          description: The user is not authorized to delete a word (aka. not admin).
        '404':
          description: The word id's is not found.
        '500':
          description: Unknown error.
  /words/importxlsx:
    post: 
      operationId: ImportWords
      summary: Import words from an Excel file.
      security:
        - APIKeyCookie: []
      description: |-
        Import words from an Excel file. The Excel file must follow [this template](https://www.youtube.com/watch?v=dQw4w9WgXcQ)
        **NOTES:** 
        + The old data will **NOT** be **DELETED** or **OVERWRITTEN**, except if there is:
          + A word with **EXACTLY** the same definition (in either English or Vietnamese)
          + ...

      tags:
        - words
      requestBody:
        description: The Excel file to be imported. If the file is not valid, the API will return an error.
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
            encoding:
              file:
                contentType: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel
      responses:
        '200':
          description: OK, together with the link to the illustration.
          content:
            application/json:
              schema:
                type: object
                properties:
                  link:
                    type: string
                example:
                  link: https://meddict-vinuni.com/illustration/1.png
        '400':
          description: The request is not following the convention.
        '403':
          description: The user is not authorized to import words (aka. not admin).

  /words/illustration/{id}:
    get:
      operationId: RetrieveIllustration
      summary: Retrieve illustration from MedDict Database of a specific word, from its id.
      description: |-
        Get the illustration of a specific word, from its id.
      tags: 
        - words
      parameters: 
        - name: id
          in: path
          description: The id of the word to retrieve the illustration from.
          required: true
          explode: true
          schema:
            type: string
          example: 1
      responses:
        '200':
          description: OK
          content: 
            image/png:
              schema:
                type: string
                format: binary
        '404':
          description: The word id's is not found.
        '400':
          description: The request is not following the convention.
        '500':
          description: Unknown error.
    post: 
      operationId: UploadIllustration
      summary: Upload a new illustration for a specific word, associated its id. 
      description: |-
        Upload a new illustration for a specific word, associated with its id. The illustration can be provided as a link to an image, or based on file upload.
      tags:
        - words
      security:
        - APIKeyCookie: []
      requestBody:
        description: |-
          The id of the word to upload the illustration to, and the ilustration itself. 
          **NOTES**: The old illustration will be **overwritten** with the new one.
        required: true
        content: 
          multipart/form-data:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  
                image:
                  type: string
                  format: binary
            encoding:
              id:
                contentType: application/json
              image:
                contentType: image/*
      responses:
        '200':
          description: OK, together with the link to the illustration.
          content:
            application/json:
              schema:
                type: object
                properties:
                  link:
                    type: string
                example:
                  link: https://meddict-vinuni.com/illustration/1.png
  
  /words/sound/{lang}/{id}:
    get:
      operationId: RetrieveSound
      summary: Retrieve sound from MedDict Database of a specific word, from its id. 
      description: |-
        Get the sound of a specific word, from its id and target language. The sound is retrieved from [gTTS](http://gtts.readthedocs.io/) library. 
      tags:
        - words
      
      parameters: 
        - name: lang
          in: path
          description: The target language to retrieve the sound from. Must be either "en" or "vn".
          required: true
          explode: true
          schema:
            type: string
            enum:
              - en
              - vn
        - name: id
          in: path
          description: The id of the word to retrieve the sound from.
          required: true
          explode: true
          schema:
            type: string
          example: 1
      responses:
        '200':
          description: OK, with a blob of sound. 
          content:
            audio/mpeg:
              schema:
                type: string
                format: binary
        '404':
          description: The word id's is not found.
  
  /pages:
    get:
      operationId: RetrievePages
      summary: Retrieve words from the database, based on the starting letter.
      tags: 
        - pages
      description: |-
        Retrieve words from the database, based on the starting letter. The starting letter is based on the first letter of the **English** word. 
        
        The default offset for each page is currently **10**.
      security:
        - APIKeyCookie: []
      parameters:
        - name: letter
          in: query
          description: |-
            The starting letter of the words to be retrieved. It must be in **UPPERCASE**. Also, the API will return the total number of words for Frontend to calculate the number of pages.

            **NOTES**:
            + The page number is optional. If not provided, the API will return the first page.
            + The page number starts from 1.
          required: true
          explode: true
          schema:
            type: string
            example: A
        - name: pages
          in: query
          description: The pages that the user wants to retrieve.
          explode: true
          schema:
            type: integer
          example: 1  
      responses: 
        '200': 
          description: 'OK'
          content: 
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/pages"

  /auth/google/authorize:
    get:
      tags:
      - auth
      summary: Oauth:Google.Jwt.Authorize
      operationId: oauth_google_jwt_authorize_auth_google_authorize_get
      parameters:
      - name: scopes
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
          title: Scopes
      description: |-
        Call this API for a link that allows the user to redirect to Google Sign In page, and then redirect back to the callback API.

        Only valid users (aka appear in "whitelist") that allows to sign in with the application.
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OAuth2AuthorizeResponse"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  /auth/google/callback:
    get:
      tags:
      - auth
      summary: Oauth:Google.Jwt.Callback
      description: The response varies based on the authentication backend used.
      operationId: oauth_google_jwt_callback_auth_google_callback_get
      parameters:
      - name: code
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Code
      - name: code_verifier
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Code Verifier
      - name: state
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: State
      - name: error
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Error
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '400':
          content:
            application/json:
              examples:
                INVALID_STATE_TOKEN:
                  summary: Invalid state token.
                LOGIN_BAD_CREDENTIALS:
                  summary: User is inactive.
                  value:
                    detail: LOGIN_BAD_CREDENTIALS
              schema:
                "$ref": "#/components/schemas/ErrorModel"
          description: Bad Request
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"

  /user:
    get:
      tags: 
        - user
      summary: Get information about this user
      operationId: authenticated_route_authenticated_route_get
      responses:
        '200':
          description: Successful Response
          content:
            application/text:
              schema: {}
              example: "Hello abcxyz@gmail.com. Your role is hecker."
      security:
      - APIKeyCookie: []
    post:
      tags:
        - user
      summary: Add User
      operationId: add_user_user_post
      description: |-
        Add a new user to the whitelist. The user will be able to sign in with the application. 

        **Note**:
          + The system can only have 01 superadmin. 
          + "manager" can't add more users. 
          + "admin" can't add more superadmins.
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Request_Add_Whitelist"
        required: true
      responses:
        '200':
          description: Successful Response. Either added successfully or already exists.
          content:
            application/json:
              schema: 
                type: object
                properties:
                  detail:
                    type: string
                    enum:
                      - User added successfully.
                      - User already exists.
        '400': 
          description: Invalid added roles
          content: 
            application/json:
              schema: 
                type: object
                properties:
                  detail:
                    type: string
                    default: Invalid added roles.
        '401':
          description: Unauthorized 
          content: 
            application/json:
              schema: 
                type: object
                properties:
                  detail:
                    type: string
                    default: Unauthorized

        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - APIKeyCookie: []
    delete:
      tags: 
        - user
      summary: Remove User
      operationId: remove_user_user_delete
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Request_Remove_Whitelist"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: 
                type: object
                properties:
                  detail:
                    type: string
                    enum:
                      - User removed
        '400': 
          description: Cannot find user
          content: 
            application/json:
              schema: 
                type: object
                properties:
                  detail:
                    type: string
                    default: Cannot find user
        '401':
          description: Unauthorized 
          content: 
            application/json:
              schema: 
                type: object
                properties:
                  detail:
                    type: string
                    default: Unauthorized
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - APIKeyCookie: []
components:        
  schemas:
    words:
      type: array
      items:
        type: object
        xml:
          name: 'item'
        properties: 
          id:
            type: integer
          en:
            type: string
          en_type: 
            type: string 
          vn: 
            type: string
          vn_type: 
            type: string
      example:
        - en: abdominal pressure
          en_type: n
          id: 8
          vn: áp lực khoang bụng
          vn_type: danh từ
        - en: abdominal aorta
          en_type: n
          id: 1
          vn: động mạch chủ bụng
          vn_type: danh từ
        - en: abdominal aortic aneurysm
          en_type: n
          id: 2
          vn: phình động mạch chủ bụng
          vn_type: danh từ
        - en: abdominal cavity
          en_type: n
          id: 3
          vn: khoang ổ bụng
          vn_type: danh từ
        - en: abdominal decompression
          en_type: n
          id: 4
          vn: giải áp khoang bụng
          vn_type: danh từ
        - en: abdominal esophagus
          en_type: n
          id: 5
          vn: thực quản vùng bụng
          vn_type: danh từ
        - en: abdominal peritoneum
          en_type: n
          id: 7
          vn: phúc mạc bụng
          vn_type: danh từ
        - en: abdominal paracentesis
          en_type: n
          id: 6
          vn: chọc dò ổ bụng
          vn_type: danh từ
        - en: extra-abdominal
          en_type: a
          id: 2452
          vn: ngoài bụng
          vn_type: tính từ
        - en: intra-abdominal abscess
          en_type: n
          id: 5515
          vn: áp-xe bụng trong bụng
          vn_type: danh từ
        - en: tuboabdominal pregnancy
          en_type: n
          id: 8727
          vn: mang thai lạc vị vòi tử cung-ổ bụng
          vn_type: danh từ
    pages:
      type: object 
      properties: 
        total:
          type: integer
          example: 98765
        words:
          $ref: "#/components/schemas/pages_word"
    pages_word:
      type: array
      items:
        type: object
        xml:
          name: 'item'
        properties: 
          id:
            type: integer
          en:
            type: string
          en_type: 
            type: string 
          vn: 
            type: string
          vn_type: 
            type: string
      example:
        - en: abdominal aorta
          en_type: n
          id: 1
          vn: động mạch chủ bụng
          vn_type: danh từ
        - en: abdominal aortic aneurysm
          en_type: n
          id: 2
          vn: phình động mạch chủ bụng
          vn_type: danh từ
        - en: AEP (auditory evoked potential)
          en_type: n
          id: 17
          vn: Viết tắt của Điện thế gợi thính giác
          vn_type: danh từ
        - en: aeroallergen
          en_type: n
          id: 18
          vn: Dị nguyên trong không khí
          vn_type: danh từ
        - en: affluxion
          en_type: n
          id: 19
          vn: Chảy dồn
          vn_type: danh từ
        - en: AFib (atrial fibrillation)
          en_type: n
          id: 20
          vn: Viết tắt của Rung nhĩ
          vn_type: danh từ
        - en: AFO (ankle-foot orthosis)
          en_type: n
          id: 21
          vn: Viết tắt của Nẹp cổ bàn chân
          vn_type: danh từ
        - en: afterdischarge
          en_type: n
          id: 22
          vn: Kích ứng lưu tồn
          vn_type: danh từ
        - en: afterimpression
          en_type: n
          id: 23
          vn: Cảm giác lưu tồn
          vn_type: danh từ
        - en: aftermath
          en_type: n
          id: 24
          vn: Hậu quả xấu
          vn_type: danh từ

    ErrorModel:
      properties:
        detail:
          anyOf:
          - type: string
          - additionalProperties:
              type: string
            type: object
          title: Detail
      type: object
      required:
      - detail
      title: ErrorModel
    HTTPValidationError:
      properties:
        detail:
          items:
            "$ref": "#/components/schemas/ValidationError"
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    OAuth2AuthorizeResponse:
      properties:
        authorization_url:
          type: string
          title: Authorization Url
      type: object
      required:
      - authorization_url
      title: OAuth2AuthorizeResponse
    Request_Add_Whitelist:
      properties:
        email:
          type: string
          title: Email
          example: "abcxyz@gmail.com"
        role:
          type: string
          title: Role
          enum:
            - superadmin
            - admin
            - manager
      type: object
      required:
      - email
      - role
      title: Request_Add_Whitelist
    Request_Remove_Whitelist:
      properties:
        email:
          type: string
          title: Email
      type: object
      required:
      - email
      title: Request_Remove_Whitelist
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
      - loc
      - msg
      - type
      title: ValidationError
  securitySchemes:
    APIKeyCookie:
      type: apiKey
      in: cookie
      name: fastapiusersauth
